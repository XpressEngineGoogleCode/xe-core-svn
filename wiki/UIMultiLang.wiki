#summary Multi Language Editor UI guideline for administrative interface
#labels UI
#sidebar DesignGuideTOC

= Multi Language Editor =

사용자 정의 다국어를 선택하거나 추가 또는 수정할 때 사용할 수 있는 UI 패턴이다.

== Basics ==
다국어 편집기 UI는 다음 템플릿 코드를 수정하여 사용할 수 있다.
{{{
<div class="multiLangEdit">
    <input type="hidden" class="vLang" />
    <input type="text" class="vLang" />
    <div class="suggestion">
        <ul></ul>
    </div>
    <div id="langEdit" class="langEdit tgContent">
        <ul>
            <li class="ko"><label for="ko_var1">Korean</label> <input type="text" /></li>
            <li class="en"><label for="en_var1">English</label> <input type="text" /></li>
            ...
        </ul>
    </div>
    <span class="desc"><a href="#langEdit" class="editUserLang tgAnchor">Multi-language</a></span>
</div>
}}}
가장 상위에 있는 `div` 요소는 클래스 이름만 그대로 유지한다면 다른 요소로 대체해도 관계없다. 반드시 지켜야 하는 규칙은 다음과 같다.
  * 최상위 객체는 `multiLangEdit` 클래스를 가지고 있어야 한다.
  * 편집기 UI에는 반드시 `vLang` 클래스를 가진 입력 요소가 2개 있어야 하며, 그 중 첫 번째 요소는 다국어 언어의 고유키를 저장하고 두 번째 요소는 다국어 언어의 문자열을 저장한다.
  * 자동 완성 결과는 `suggestion`이라는 클래스를 가진 요소의 자식인 `ul` 요소에 목록으로 표시된다.
  * `a.editUserLang.tgAnchor` 요소를 클릭하면 `href` 속성이 가리키는 요소를 화면에 표시한다.
  * 다국어 문자열은 `langEdit tgContent`라는 클래스를 가진 요소에서 편집한다. 이 요소 하위에는 `ul` 요소가 있는데 `ul` 요소의 자식 요소인 `li`는 언어 코드를 클래스로 가진다. 예를 들어, 영어라면 `en` 한국어라면 `ko`를 클래스로 가진다.
  * 다국어 편집 레이어를 표시할 때 `li` 요소 아래에 있는 `input` 요소에 자동으로 값이 채워진다.