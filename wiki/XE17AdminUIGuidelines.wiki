=CSS=
Coming Soon...

=Javascript=
Related js functions are in /modules/admin/tpl/js/admin.js file.
All events are delegated from document.body to bind less events and to take care of dynamically created elements

==TARGET toggle [data-toggle="TARGET"]==
Toggles the display status of the TARGET. The target can be any css query string.

HTML
{{{
<a href="#TARGET" data-toggle="#TARGET">...</a>
<div id="TARGET">...</div>
}}}

==TARGET show [data-show="TARGET"]==
Shows the TARGET. The TARGET can be any css query string.

HTML
{{{
<a href="#TARGET" data-show="#TARGET">OPEN</a>
<div id="TARGET">
	This layer will be opened.
</div>
}}}


==TARGET hide [data-hide="TARGET"]==
Hides the TARGET. The TARGET can be any css query string.

HTML
{{{
<div id="TARGET">
	This layer will be closed.
	<button type="button" class="x_close" data-hide="#TARGET">&times;</button>
</div>
}}}

==Horizontal Tab==

HTML
{{{
<div class="x_tabbable">
	<ul class="x_nav x_nav-tabs">
		<li class="x_active"><a href="#one">#1</a></li>
		<li><a href="#two">#2</a></li>
	</ul>
	<div class="x_tabcontent">
		<div class="x_tab-pane x_active" id="one">#1 CONTENT</div>
		<div class="x_tab-pane" id="two">#2 CONTENT</div>
	</div>
</div>
}}}

JS - /modules/admin/tpl/js/admin.js
{{{
// .x_tabbable
	var $tabbable = $('.x .x_tabbable');
	$tabbable.find('.x_tab-pane:not(".x_active")').hide();
	$tabbable.find('.x_nav-tabs>li>a').click(function(){
		var $this = $(this);
		$this.parent('li').addClass('x_active').siblings().removeClass('x_active');
		$tabbable.find($this.attr('href')).addClass('x_active').show().siblings().removeClass('x_active').hide();
		return false;
	});
}}}