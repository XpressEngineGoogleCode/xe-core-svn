#summary Module Search UI guideline for administrative interface
#labels UI
#sidebar DesignGuideTOC

= Module Search =

특정 모듈을 찾아야 할 필요가 있을 때 사용하는 UI 패턴이다. 기존 Module Finder와 기능은 동일하나 불편한 UI를 개선하기 위해서 개발됐다. 이 UI를 통해 선택할 수 있는 값은 모듈 종류, 모듈 아이디(고유 숫자)이다.

== Basics ==
모듈 검색기의 모든 컨트롤은 `moduleSearch`라는 클래스를 가진 컨테이너의 하위 요소여야 한다.

모듈 검색기를 사용하기 위해 필요한 규칙은 다음과 같다.
  # 모든 컨트롤은 `moduleSearch`라는 클래스를 가진 요소의 하위 요소이다.
  # 모듈 검색 창을 띄우는 버튼은 `tgAnchor` 및 `moduleSearch`라는 클래스를 가지는 앵커 요소(&lt;a&gt;)이다.
  # 모듈 선택 후 실행하고자 하는 함수는 `moduleSearch`라는 클래스를 가진 컨테이너 요소에 `moduleSelect`라는 이벤트 명으로 할당 해 둔다.
  # 위에 언급한 내용을 모두 포함하는 마크업은 아래와 같다.
{{{
<!-- moduleSearch라는 클래스를 가진 컨테이너 요소 -->
<div class="moduleSearch">

<!-- 모듈 선택 후 실행하고자 하는 함수-->
<script>
jQuery(function($){
	// 선택이벤트와 선택한 모듈 타입, 이름, 고유 번호로 호출된다.
	// 한 페이지에 여러개의 .moduleSearch가 있다면, 각 컨테이너에 다른 클래스를 추가 할당 해 이것을 구분자로 이용
	$('.moduleSearch').bind('moduleSelect', function(e, sModuleType, sModuleInstanceName, sModuleInstanceSrl){
		$('#_target_module').val(sModuleInstanceName);
		$('#index_module_srl').val(sModuleInstanceSrl);
	});
});
</script>

	<!-- 모듈 선택 창을 띄울 앵커 태그 -->
	<a href="#moduleSearchWindowDiv" class="tgAnchor moduleSearch">{$lang->cmd_find}</a>

	<!-- 모듈 선택 창 마크업 -->
	<div id="moduleSearchWindowDiv" class="moduleSearchWindow tgContent">
		<div class="siteList sectionDiv">
			<h2>{$lang->select_site}</h2>
			<div class="siteListSearchBox">
				<div class="siteListSearchBoxBorder">
					<div class="searchImg icon-search"></div>
					<input type="text" class="siteListSearchInput" name="site_filter">
				</div>
			</div>
			<div class="siteListUL">
				<ul>
				</ul>
			</div>
		</div>
		<div class="moduleTypeList sectionDiv">
			<h2>{$lang->select_module_type}</h2>
			<div>
				<ul class="moduleTypeListUL">
				</ul>
			</div>
		</div>
		<div class="moduleInstanceList sectionDiv">
			<h2>{$lang->select_module_instance}</h2>
			<div>
				<ul class="moduleInstanceListUL">
				</ul>
			</div>
		</div>
	</div>
</div>
}}}

위 코드를 작성한 후 웹 브라우저에서 열고 사이트 검색을 실행하면 다음과 같은 화면을 볼 수 있다.

http://xe-core.googlecode.com/svn/wiki/img/AdminUIModuleSearchExample.png

사이트 검색을 실행하기 전에는 모듈 종류와 모듈 목록이 화면에 나타나지 않을 수도 있다.

== jQuery Plugin ==
이 패턴은 페이지를 읽어들일 때 자동으로 실행되기 때문에 페이지 요소를 동적으로 생성하는 경우에는 적용되지 않는 문제가 있다.
다음과 같이 컴포넌트를 적용한 컨테이너를 선택한 후 `$.fn.xeModuleSearch` 메소드를 실행하면 페이지를 읽어들인 뒤에도 스크립트를 적용할 수 있다.
{{{
$('.moduleSearch').xeModuleSearch();
}}}